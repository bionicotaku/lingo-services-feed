// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/feed/v1/feed.proto

package feedv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetFeedRequest 描述 Feed 获取请求的参数。
type GetFeedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求条目数量，默认 20，最大 100。
	Limit         int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedRequest) Reset() {
	*x = GetFeedRequest{}
	mi := &file_api_feed_v1_feed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedRequest) ProtoMessage() {}

func (x *GetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feed_v1_feed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedRequest.ProtoReflect.Descriptor instead.
func (*GetFeedRequest) Descriptor() ([]byte, []int) {
	return file_api_feed_v1_feed_proto_rawDescGZIP(), []int{0}
}

func (x *GetFeedRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// GetFeedResponse 返回补水后的推荐卡片以及分页信息。
type GetFeedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Items []*FeedItem            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 下一页游标，空值表示没有更多数据。
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// 是否存在未完成补水的条目。
	Partial bool `protobuf:"varint,3,opt,name=partial,proto3" json:"partial,omitempty"`
	// 结果生成时间，UTC。
	GeneratedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	// 补水缺失的视频 ID 列表，便于观测定位。
	MissingProjections []*MissingProjection `protobuf:"bytes,5,rep,name=missing_projections,json=missingProjections,proto3" json:"missing_projections,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetFeedResponse) Reset() {
	*x = GetFeedResponse{}
	mi := &file_api_feed_v1_feed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedResponse) ProtoMessage() {}

func (x *GetFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_feed_v1_feed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedResponse.ProtoReflect.Descriptor instead.
func (*GetFeedResponse) Descriptor() ([]byte, []int) {
	return file_api_feed_v1_feed_proto_rawDescGZIP(), []int{1}
}

func (x *GetFeedResponse) GetItems() []*FeedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetFeedResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetFeedResponse) GetPartial() bool {
	if x != nil {
		return x.Partial
	}
	return false
}

func (x *GetFeedResponse) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

func (x *GetFeedResponse) GetMissingProjections() []*MissingProjection {
	if x != nil {
		return x.MissingProjections
	}
	return nil
}

// FeedItem 表示返回给终端的单个推荐卡片。
type FeedItem struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VideoId           string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Title             string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description       string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DurationMicros    int64                  `protobuf:"varint,4,opt,name=duration_micros,json=durationMicros,proto3" json:"duration_micros,omitempty"`
	ThumbnailUrl      string                 `protobuf:"bytes,5,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	HlsMasterPlaylist string                 `protobuf:"bytes,6,opt,name=hls_master_playlist,json=hlsMasterPlaylist,proto3" json:"hls_master_playlist,omitempty"`
	ReasonCode        string                 `protobuf:"bytes,7,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonLabel       string                 `protobuf:"bytes,8,opt,name=reason_label,json=reasonLabel,proto3" json:"reason_label,omitempty"`
	Score             float64                `protobuf:"fixed64,9,opt,name=score,proto3" json:"score,omitempty"`
	VisibilityStatus  string                 `protobuf:"bytes,10,opt,name=visibility_status,json=visibilityStatus,proto3" json:"visibility_status,omitempty"`
	PublishedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Attributes        map[string]string      `protobuf:"bytes,12,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FeedItem) Reset() {
	*x = FeedItem{}
	mi := &file_api_feed_v1_feed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedItem) ProtoMessage() {}

func (x *FeedItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_feed_v1_feed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedItem.ProtoReflect.Descriptor instead.
func (*FeedItem) Descriptor() ([]byte, []int) {
	return file_api_feed_v1_feed_proto_rawDescGZIP(), []int{2}
}

func (x *FeedItem) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *FeedItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FeedItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeedItem) GetDurationMicros() int64 {
	if x != nil {
		return x.DurationMicros
	}
	return 0
}

func (x *FeedItem) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *FeedItem) GetHlsMasterPlaylist() string {
	if x != nil {
		return x.HlsMasterPlaylist
	}
	return ""
}

func (x *FeedItem) GetReasonCode() string {
	if x != nil {
		return x.ReasonCode
	}
	return ""
}

func (x *FeedItem) GetReasonLabel() string {
	if x != nil {
		return x.ReasonLabel
	}
	return ""
}

func (x *FeedItem) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *FeedItem) GetVisibilityStatus() string {
	if x != nil {
		return x.VisibilityStatus
	}
	return ""
}

func (x *FeedItem) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *FeedItem) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// MissingProjection 描述未能补水的条目。
type MissingProjection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissingProjection) Reset() {
	*x = MissingProjection{}
	mi := &file_api_feed_v1_feed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissingProjection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingProjection) ProtoMessage() {}

func (x *MissingProjection) ProtoReflect() protoreflect.Message {
	mi := &file_api_feed_v1_feed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissingProjection.ProtoReflect.Descriptor instead.
func (*MissingProjection) Descriptor() ([]byte, []int) {
	return file_api_feed_v1_feed_proto_rawDescGZIP(), []int{3}
}

func (x *MissingProjection) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *MissingProjection) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_api_feed_v1_feed_proto protoreflect.FileDescriptor

const file_api_feed_v1_feed_proto_rawDesc = "" +
	"\n" +
	"\x16api/feed/v1/feed.proto\x12\afeed.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"1\n" +
	"\x0eGetFeedRequest\x12\x1f\n" +
	"\x05limit\x18\x01 \x01(\x05B\t\xbaH\x06\x1a\x04\x18d(\x01R\x05limit\"\x81\x02\n" +
	"\x0fGetFeedResponse\x12'\n" +
	"\x05items\x18\x01 \x03(\v2\x11.feed.v1.FeedItemR\x05items\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x18\n" +
	"\apartial\x18\x03 \x01(\bR\apartial\x12=\n" +
	"\fgenerated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\x12K\n" +
	"\x13missing_projections\x18\x05 \x03(\v2\x1a.feed.v1.MissingProjectionR\x12missingProjections\"\xac\x04\n" +
	"\bFeedItem\x12\"\n" +
	"\bvideo_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\avideoId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x0fduration_micros\x18\x04 \x01(\x03R\x0edurationMicros\x12#\n" +
	"\rthumbnail_url\x18\x05 \x01(\tR\fthumbnailUrl\x12.\n" +
	"\x13hls_master_playlist\x18\x06 \x01(\tR\x11hlsMasterPlaylist\x12\x1f\n" +
	"\vreason_code\x18\a \x01(\tR\n" +
	"reasonCode\x12!\n" +
	"\freason_label\x18\b \x01(\tR\vreasonLabel\x12\x14\n" +
	"\x05score\x18\t \x01(\x01R\x05score\x12+\n" +
	"\x11visibility_status\x18\n" +
	" \x01(\tR\x10visibilityStatus\x12=\n" +
	"\fpublished_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vpublishedAt\x12A\n" +
	"\n" +
	"attributes\x18\f \x03(\v2!.feed.v1.FeedItem.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x11MissingProjection\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason2K\n" +
	"\vFeedService\x12<\n" +
	"\aGetFeed\x12\x17.feed.v1.GetFeedRequest\x1a\x18.feed.v1.GetFeedResponseB?Z=github.com/bionicotaku/lingo-services-feed/api/feed/v1;feedv1b\x06proto3"

var (
	file_api_feed_v1_feed_proto_rawDescOnce sync.Once
	file_api_feed_v1_feed_proto_rawDescData []byte
)

func file_api_feed_v1_feed_proto_rawDescGZIP() []byte {
	file_api_feed_v1_feed_proto_rawDescOnce.Do(func() {
		file_api_feed_v1_feed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_feed_v1_feed_proto_rawDesc), len(file_api_feed_v1_feed_proto_rawDesc)))
	})
	return file_api_feed_v1_feed_proto_rawDescData
}

var file_api_feed_v1_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_feed_v1_feed_proto_goTypes = []any{
	(*GetFeedRequest)(nil),        // 0: feed.v1.GetFeedRequest
	(*GetFeedResponse)(nil),       // 1: feed.v1.GetFeedResponse
	(*FeedItem)(nil),              // 2: feed.v1.FeedItem
	(*MissingProjection)(nil),     // 3: feed.v1.MissingProjection
	nil,                           // 4: feed.v1.FeedItem.AttributesEntry
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_api_feed_v1_feed_proto_depIdxs = []int32{
	2, // 0: feed.v1.GetFeedResponse.items:type_name -> feed.v1.FeedItem
	5, // 1: feed.v1.GetFeedResponse.generated_at:type_name -> google.protobuf.Timestamp
	3, // 2: feed.v1.GetFeedResponse.missing_projections:type_name -> feed.v1.MissingProjection
	5, // 3: feed.v1.FeedItem.published_at:type_name -> google.protobuf.Timestamp
	4, // 4: feed.v1.FeedItem.attributes:type_name -> feed.v1.FeedItem.AttributesEntry
	0, // 5: feed.v1.FeedService.GetFeed:input_type -> feed.v1.GetFeedRequest
	1, // 6: feed.v1.FeedService.GetFeed:output_type -> feed.v1.GetFeedResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_feed_v1_feed_proto_init() }
func file_api_feed_v1_feed_proto_init() {
	if File_api_feed_v1_feed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_feed_v1_feed_proto_rawDesc), len(file_api_feed_v1_feed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_feed_v1_feed_proto_goTypes,
		DependencyIndexes: file_api_feed_v1_feed_proto_depIdxs,
		MessageInfos:      file_api_feed_v1_feed_proto_msgTypes,
	}.Build()
	File_api_feed_v1_feed_proto = out.File
	file_api_feed_v1_feed_proto_goTypes = nil
	file_api_feed_v1_feed_proto_depIdxs = nil
}
