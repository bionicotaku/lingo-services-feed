// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: recommendation_logs.sql

package feeddb

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertRecommendationLog = `-- name: InsertRecommendationLog :exec
insert into feed.recommendation_logs (
  user_id,
  request_limit,
  recommendation_source,
  recommendation_latency_ms,
  recommended_items,
  missing_video_ids,
  error_kind,
  generated_at
)
values (
  $1,
  $2,
  $3,
  $4,
  coalesce($5, '[]'::jsonb),
  coalesce($6, '[]'::jsonb),
  $7,
  coalesce($8, now())
)
`

type InsertRecommendationLogParams struct {
	UserID                  pgtype.Text `json:"user_id"`
	RequestLimit            int32       `json:"request_limit"`
	RecommendationSource    string      `json:"recommendation_source"`
	RecommendationLatencyMs pgtype.Int4 `json:"recommendation_latency_ms"`
	RecommendedItems        interface{} `json:"recommended_items"`
	MissingVideoIds         interface{} `json:"missing_video_ids"`
	ErrorKind               pgtype.Text `json:"error_kind"`
	GeneratedAt             interface{} `json:"generated_at"`
}

func (q *Queries) InsertRecommendationLog(ctx context.Context, arg InsertRecommendationLogParams) error {
	_, err := q.db.Exec(ctx, insertRecommendationLog,
		arg.UserID,
		arg.RequestLimit,
		arg.RecommendationSource,
		arg.RecommendationLatencyMs,
		arg.RecommendedItems,
		arg.MissingVideoIds,
		arg.ErrorKind,
		arg.GeneratedAt,
	)
	return err
}
