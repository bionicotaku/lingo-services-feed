// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: recommendation_logs.sql

package feeddb

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertRecommendationLog = `-- name: InsertRecommendationLog :exec
insert into feed.recommendation_logs (
  user_id,
  scene,
  requested,
  returned,
  partial,
  recommendation_source,
  latency_ms,
  missing_ids,
  generated_at
)
values (
  $1,
  $2,
  $3,
  $4,
  $5,
  $6,
  $7,
  coalesce($8, '[]'::jsonb),
  coalesce($9, now())
)
`

type InsertRecommendationLogParams struct {
	UserID               pgtype.Text `json:"user_id"`
	Scene                string      `json:"scene"`
	Requested            int32       `json:"requested"`
	Returned             int32       `json:"returned"`
	Partial              bool        `json:"partial"`
	RecommendationSource string      `json:"recommendation_source"`
	LatencyMs            pgtype.Int4 `json:"latency_ms"`
	Column8              interface{} `json:"column_8"`
	Column9              interface{} `json:"column_9"`
}

func (q *Queries) InsertRecommendationLog(ctx context.Context, arg InsertRecommendationLogParams) error {
	_, err := q.db.Exec(ctx, insertRecommendationLog,
		arg.UserID,
		arg.Scene,
		arg.Requested,
		arg.Returned,
		arg.Partial,
		arg.RecommendationSource,
		arg.LatencyMs,
		arg.Column8,
		arg.Column9,
	)
	return err
}
